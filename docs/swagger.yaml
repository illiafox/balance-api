basePath: /api
definitions:
  dto.BlockIN:
    properties:
      reason:
        type: string
      user_id:
        type: integer
    type: object
  dto.BlockOUT:
    properties:
      ok:
        type: boolean
    type: object
  dto.ChangeBalanceIN:
    properties:
      change:
        type: integer
      description:
        description: '|min_len:10'
        type: string
      user_id:
        type: integer
    required:
    - description
    type: object
  dto.ChangeBalanceOUT:
    properties:
      ok:
        type: boolean
    type: object
  dto.GetBalanceOUT:
    properties:
      balance:
        type: string
      base:
        type: string
      ok:
        type: boolean
    type: object
  dto.TransferBalanceIN:
    properties:
      amount:
        type: integer
      description:
        description: '|min_len:10'
        type: string
      from_id:
        type: integer
      to_id:
        type: integer
    required:
    - description
    type: object
  dto.TransferBalanceOUT:
    properties:
      ok:
        type: boolean
    type: object
  dto.UnblockIN:
    properties:
      user_id:
        type: integer
    type: object
  dto.UnblockOUT:
    properties:
      ok:
        type: boolean
    type: object
  dto.ViewTransactionsOUT:
    properties:
      ok:
        type: boolean
      transactions:
        items:
          $ref: '#/definitions/entity.Transaction'
        type: array
    type: object
  entity.Transaction:
    properties:
      action:
        type: integer
      date:
        type: string
      description:
        type: string
      from_id:
        description: zero -> null -> received from other service
        type: integer
      to_id:
        description: to_id
        type: integer
      transaction_id:
        type: integer
    type: object
  httputils.Error:
    properties:
      err:
        type: string
      ok:
        type: boolean
    type: object
host: 0.0.0.0:8080
info:
  contact:
    email: illiadimura@gmail.com
    name: Developer
    url: https://github.com/illiafox
  description: Balance API.
  license:
    name: Boost Software License 1.0
    url: https://opensource.org/licenses/BSL-1.0
  termsOfService: https://swagger.io/terms/
  title: Balance API
  version: "1.0"
paths:
  /admin/block:
    post:
      consumes:
      - application/json
      description: Block balance by user ID
      parameters:
      - description: User ID and Reason
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.BlockIN'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BlockOUT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/httputils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputils.Error'
      summary: Block user balance
      tags:
      - admin
  /admin/unblock:
    post:
      consumes:
      - application/json
      description: Unblock balance by user ID
      parameters:
      - description: User ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UnblockIN'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UnblockOUT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/httputils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputils.Error'
      summary: Unblock user balance
      tags:
      - admin
  /user/{id}:
    get:
      description: Get balance by User ID
      parameters:
      - description: user id
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: currency abbreviation
        in: query
        minLength: 3
        name: base
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Balance data
          schema:
            allOf:
            - $ref: '#/definitions/dto.GetBalanceOUT'
            - properties:
                balance:
                  type: integer
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Error'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/httputils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputils.Error'
      summary: Get user balance
      tags:
      - balance
  /user/{id}/transactions:
    get:
      description: View transactions with sorting and pagination
      parameters:
      - description: user id
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - default: 100
        description: output limit
        in: query
        maximum: 100
        minimum: 0
        name: limit
        type: integer
      - default: 0
        description: output offset
        in: query
        minimum: 0
        name: offset
        type: integer
      - description: sort type
        enum:
        - DATE_DESC
        - DATE_ASC
        - SUM_DESC
        - SUM_ASC
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transactions data
          schema:
            $ref: '#/definitions/dto.ViewTransactionsOUT'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/httputils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputils.Error'
      summary: View user transactions
      tags:
      - transactions
  /user/change:
    patch:
      consumes:
      - application/json
      description: Change balance by user ID
      parameters:
      - description: User ID, Change amount and Description
        in: body
        name: input
        schema:
          $ref: '#/definitions/dto.ChangeBalanceIN'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ChangeBalanceOUT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/httputils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputils.Error'
      summary: Change user balance
      tags:
      - balance
  /user/transfer:
    post:
      consumes:
      - application/json
      description: Transfer money from one balance to another
      parameters:
      - description: To and From ID, Amount and Description
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.TransferBalanceIN'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TransferBalanceOUT'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/httputils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputils.Error'
      summary: Transfer money between users
      tags:
      - balance
schemes:
- http
- https
swagger: "2.0"
